install.packages("shinyWidgets")
library(scales)
# inputs
url <- "https://ilias.uni-hohenheim.de/goto.php?target=file_1421355_download&client_id=UHOH"
app <- ""
subdir <- "ShinyApplication"
launch.browser <- TRUE
filetype <- NULL
destdir <- NULL
if (!is.null(subdir) && ".." %in% strsplit(subdir, "/")[[1]]) {
stop("'..' not allowed in subdir")
}
if (is.null(filetype)) {
filetype <- basename(url)
}
if (grepl("\\.tar\\.gz$", filetype)) {
fileext <- ".tar.gz"
} else if (grepl("\\.tar$", filetype)) {
fileext <- ".tar"
} else if (grepl("\\.zip$", filetype)) {
fileext <- ".zip"
} else {
stop("Unknown file extension.")
}
message("Downloading ", url)
if (is.null(destdir)) {
filePath <- tempfile("shinyapp", fileext = fileext)
fileDir <- tempfile("shinyapp")
} else {
fileDir <- destdir
filePath <- paste(destdir, fileext)
}
dir.create(fileDir, showWarnings = FALSE)
# inputs
url <- "https://ilias.uni-hohenheim.de/goto.php?target=file_1421355_download&client_id=UHOH/IllustrationHypothesisTest_ShinyApplication.zip"
app <- ""
subdir <- "ShinyApplication"
launch.browser <- TRUE
filetype <- NULL
destdir <- NULL
if (!is.null(subdir) && ".." %in% strsplit(subdir, "/")[[1]]) {
stop("'..' not allowed in subdir")
}
if (is.null(filetype)) {
filetype <- basename(url)
}
if (grepl("\\.tar\\.gz$", filetype)) {
fileext <- ".tar.gz"
} else if (grepl("\\.tar$", filetype)) {
fileext <- ".tar"
} else if (grepl("\\.zip$", filetype)) {
fileext <- ".zip"
} else {
stop("Unknown file extension.")
}
message("Downloading ", url)
if (is.null(destdir)) {
filePath <- tempfile("shinyapp", fileext = fileext)
fileDir <- tempfile("shinyapp")
} else {
fileDir <- destdir
filePath <- paste(destdir, fileext)
}
fileDir
filePath
dir.create(fileDir, showWarnings = FALSE)
if (download(url, filePath, mode = "wb", quiet = TRUE) != 0) {
stop("Failed to download URL ", url)
}
if (download.file(url, filePath, mode = "wb", quiet = TRUE) != 0) {
stop("Failed to download URL ", url)
}
filePath
url
url <- "https://ilias.uni-hohenheim.de/goto.php?target=file_1421355_download&client_id=UHOH"
if (download.file(url, filePath, mode = "wb", quiet = TRUE) != 0) {
stop("Failed to download URL ", url)
}
if (download.file(url, filePath, mode = "wb", quiet = TRUE) != 0) {
stop("Failed to download URL ", url)
}
shiny::runApp('C:/Users/Markus/uni-hohenheim.de/Robert Jung - 520KOneDrive/MA_Lehre/MA_EMBE/MA_EMBE_2223/ShinyApplications/IllustrationCLT_ShinyApplication/ShinyApplication')
runApp('C:/Users/Markus/uni-hohenheim.de/Robert Jung - 520KOneDrive/MA_Lehre/MA_EMBE/MA_EMBE_2223/ShinyApplications/IllustrationCLT_ShinyApplication/ShinyApplication')
runApp('C:/Users/Markus/uni-hohenheim.de/Robert Jung - 520KOneDrive/MA_Lehre/MA_EMBE/MA_EMBE_2223/ShinyApplications/IllustrationCLT_ShinyApplication/ShinyApplication')
runApp('C:/Users/Markus/uni-hohenheim.de/Robert Jung - 520KOneDrive/MA_Lehre/MA_EMBE/MA_EMBE_2223/ShinyApplications/IllustrationCLT_ShinyApplication/ShinyApplication')
input <- list()
input <- list()
input$N <- 10
input$p <- 0.5
# function for simulation results
Y_bar_sim_fun <- function(RR,NN,p){
set.seed(12345)
# theoretical moments
mu <- p      # mean
s2 <- p*(1-p) # variance
# initialize vectors for simulation results
Y.bar <- numeric(RR)
Y.bar.z <- numeric(RR)
for (ii in 1:RR) {
Y.sim <- rbinom(n=NN, size=1, prob=p)
Y.bar[ii] <- mean(Y.sim)
Y.bar.z[ii] <- (mean(Y.sim)-mu)/sqrt(s2/NN)
# see, S&W, 2020, p.89
}
return(list(Y.bar=Y.bar, Y.bar.z=Y.bar.z))
}
N <- input$N
p <- input$p
mu  <- p
s2 <- p*(1-p)
Y.bar.sim.n <- Y_bar_sim_fun(RR = 10000, NN = N, p = p)
brk.int <- 1/N
hist(x=Y.bar.sim.n$Y.bar, breaks=seq(0,1,brk.int), freq=FALSE,
xlim=c(0,1),
main=paste("n=",N),
xlab="",
ylab="Absolute Frequency")
abline(v = mu)
abline(v = mu, lty = 2, col = "red")
system.file("examples/06_tabsets", package = "shiny")
source("https://raw.githubusercontent.com/mmoessler/IllustrationHypothesisTest_SinyApplication/main/RunApp_IllustrationHypothesisTest_ShinyApplication.R")
